3-1.    标识符。为什么 Python 中不需要变量名和变量类型声明?

答：Python 是一门动态语言，也是一种强类型语言。

这表示它无需直接声明变量，而是会根据你的赋值决定类型。

所以会在你新建一个新的变量时开辟内存。

强类型是指他一旦确定类型之后，就不能改变，当然也可以用一些工厂函数，类似int(),float()去转换。

 

3–2.   标识符。为什么 Python 中不需要声明函数类型?

答：[转自http://pengfaliu.blog.163.com/blog/static/599160532014064057583/]

函数没有定义返回的数据类型。 Python不需要提定返回值的数据类型；甚至不需要指定是否有返回值。实际上，每个Python函数都返回一个值；如果函数执行过return语句，它将返回指定的值，否则将返回None（Python 的空值）。

3–3.   标识符。为什么应当避免在变量名的开始和和结尾使用双下划线?

答：因为这在python中是专用的，__xxx__表示系统定义的名字

tips：

_xxx    不用'from module import *'导入

__xxx__    系统定义名字

__xxx    类中的私有变量名


3–4.   语句。在 Python 中一行可以书写多个语句吗?

答：OK，分号（;）将多个语句连接在一行中，不过为了代码大可读性，不建议这么做。


3–5. 语句。在 Python 中可以将一个语句分成多行书写吗?

答：1）   反斜线 ( \ ) 继续上一行

        2） 例外情况，使用闭合操作符时，单一语句可以跨多行 

               如：( ) 、[ ] 、{ }

         3）三引号:

            '''   '''   、   """    """

3–6.   变量赋值
(a)赋值语句 x, y, z = 1, 2, 3 会在 x、y、z 中分别赋什么值?
(b)执行 z, x, y = y, z, x 后,x、y、z 中分别含有什么值?

答:

>>> x,y,z = 1,2,3
>>> x
1
>>> y
2
>>> z
3
>>> z,x,y = y,z,x
>>> x
3
>>> y
1
>>> z
2
     



3–8.

Pythongc代码。将脚本拷贝到您的文件系统中,然后修改它。可以添加注释,修改

提示符(‘>’太单调了)等等,修改这些代码,使它看上去更舒服。

3–9.

移植。gc如果你在不同类型的计算机系统中分别安装有Python,检查一下,

os.linesepgc的值是否有不同。记下操作系统的类型以及linesep的值。

3–10.

异常。使用类似gcreadTextFile.py中异常处理的方法取代readTextFile.py

makeTextFile.pygc中对os.path.exists()的调用。反过来,用os.path.exists()取代

readTextFile.pygc中的异常处理方法。

3–11.

字符串格式化gc不再抑制readTextFile.py中print语句生成的NEWLINE字符,修改你的

代码,gc在显示一行之前删除每行末尾的空白。这样,你就可以移除print语句末尾的逗号了。

提示:gc使用字符串对象的strip()方法
